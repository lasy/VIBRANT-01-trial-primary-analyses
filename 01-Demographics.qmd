---
title: "Demographics table"
author: Laura Symul & Laura Vermeren
format: 
   html:
     page-layout: full
     code-fold: true
     toc: true
     toc-location: left
     toc-depth: 5
     embed-resources: true
execute:
  cache: true
  warning: false
knitr:
  opts_chunk:
    out.width: "100%"
editor: source
---

```{r}
#| warning: false

library(tidyverse)
library(magrittr)
library(gt)
library(gtsummary)
library(patchwork)
library(labelled)
library(SummarizedExperiment)
library(tidySummarizedExperiment)
library(MultiAssayExperiment)

tmp <- fs::dir_map("R/", source)

theme_set(theme_light())
```


# Loading the `MultiAssayExperiment` object

```{r}

data_source <- "real"
mae_files <- 
  fs::dir_ls(data_dir(data_source = data_source), regexp = "mae_full_.*\\.rds$") |> 
  sort(decreasing = TRUE) |>
  magrittr::extract(1)

mae <- readRDS(mae_files)

rm(mae_files)

```


### Summary table 

We create a `table1_data` table from the metadata of the `participant_crfs_merged` mae, which contains only the variables needed to create table 1 (`site`, `age`, `race`, `ethn`, `cut_size_meals`, `eat_less`, `hungry_did_not_eat`, `sexual_partners_lifetime`, `sexual_partners_past_month`, `contraception_method` and `group4`) and the participants including in the mITT population. 

We create the variable `food_insecurity` based on the three variables `cut_size_meals`, `eat_less` and `hungry_did_not_eat`. If any of these three variables is "Yes", then the participant is considered to be food insecure.

```{r}

table1_data <- 
  metadata(mae)$participant_crfs_merged |> 
  left_join(colData(mae) |> as_tibble() |> select(pid, ITT, mITT, PP) |> distinct(), by = "pid") |> 
  filter(mITT) |> 
  select(pid, site, age, race, ethn, cut_size_meals, eat_less, hungry_did_not_eat, sexual_partners_lifetime, sexual_partners_past_month, contraception_method, group4) |> 
  mutate(
    food_insecurity = ifelse(
      cut_size_meals == "Yes" | eat_less == "Yes" | hungry_did_not_eat == "Yes",
      "Yes",
      "No"
    ),
    food_insecurity = factor(food_insecurity, levels = c("No", "Yes"))
  ) |> 
  select(-c(eat_less, cut_size_meals, hungry_did_not_eat))


table1_data |> 
  ggplot(aes(x = food_insecurity)) +
  geom_bar() +
  labs(x= "Food insecurity", y = "Count")+
  theme_classic()

```

We also need to include the partner's gender. This information is requested at visits 1000, 1100, 1200, 1300, 1400, 1500, 1700, 1900, 2120 in crf19. The variable `past_week_sex_partner` of `visits` table will be summarize in 3 categories:
- Only male 
- Only female
- Both
And add to the `table1_data` table.

```{r}

gender_sexual_partner <- 
  metadata(mae)$visits_crfs_merged |>
  select(pid, past_week_sex_partner) |>
  filter(!is.na(past_week_sex_partner)) |>
  group_by(pid) |>
  summarise(
    gender_sexual_partner = case_when(
      all(past_week_sex_partner == "No sex in the past week") ~ "No sex",
      any(past_week_sex_partner %in% c("A single male partner", "Multiple male partners")) &
        !any(past_week_sex_partner %in% c("A single female partner", "Multiple female partners")) ~ "Only man",
      any(past_week_sex_partner %in% c("A single female partner", "Multiple female partners")) &
        !any(past_week_sex_partner %in% c("A single male partner", "Multiple male partners")) ~ "Only female",
      any(past_week_sex_partner %in% c("A single male partner", "Multiple male partners")) &
        any(past_week_sex_partner %in% c("A single female partner", "Multiple female partners")) ~ "Both",
      TRUE ~ NA_character_
    ),
    .groups = "drop"
  )

table1_data <- 
  table1_data |> 
  left_join(gender_sexual_partner, by = "pid")

```


For the time being, participants are randomly assigned to a treatment arm, except for those in group4, who are assigned to the *LC-106-o* arm.

We recode the `race` variable:
- "Asian or South Asian" is recoded to "Asian"
- "Black, African American, or African" and "African" are recoded to "Black"
- "Coloured", "White" and "Other" are not changed
- "Prefered not to answer" is dropped since no participants are in this category

```{r}

table1_data <-
  table1_data |>
  
  # randomly assign participants to arms
  mutate(
    arm = case_when(
      group4 == "Yes" ~ "LC-106-o",
      TRUE ~ sample(
        c("Palcebo", "LC-106-7", "LC-106-3", "LC-115"),
        size = n(),
        replace = TRUE
      )
    ),
    across(where(is.character), as.factor),
    
    race = fct_recode(
      race,
      "Asian" = "Asian or South Asian",
      "Black" = "Black, African American, or African",
      "Black" = "African",
      "Coloured" = "Coloured",
      "White" = "White",
      "Other" = "Other"
    ),
    
    race = fct_drop(race, only = "Prefer not to answer"),
    race = fct_relevel(race, "Asian", "Black", "Coloured", "White", "Other"), 
    arm = fct_relevel(arm, "Palcebo", "LC-106-7", "LC-106-3", "LC-106-o", "LC-115"),
  ) |>
  
  select(-group4) |>
  
  set_variable_labels(
    food_insecurity = "Report food insecurity in past 12 months ",
    #gender_sexual_partners = "Gender of sexual partners",
    sexual_partners_past_month = "Number of partners in past month",
    sexual_partners_lifetime = "Number of partners in lifetime",
    ethn = "Ethnicity", 
    contraception_method = "Contraception", 
    gender_sexual_partner = "Gender of sexual partners"
  )

```

Create Table 1 (by arm)

```{r}

table1_data |> 
  select(-pid) |>
  rename_with(~ str_to_title(.x)) |>  
  tbl_summary(
    by = Arm,
    type =
      list(
        Sexual_partners_past_month ~ "continuous",
        Sexual_partners_lifetime ~ "continuous"
      ),
    statistic = list(
      all_continuous() ~ "{mean} ({min}-{max})",
      all_categorical() ~ "{n} ({p}%)"
    )
  )  |> 
  add_p()

```


Create Table 1 (by site)

```{r}

table1_data |> 
  select(arm, age, race, site, food_insecurity, contraception_method, sexual_partners_past_month, sexual_partners_lifetime) |>
  rename_with(~ str_to_title(.x)) |>  
  tbl_summary(
    by = Site,
    type =
      list(
        Sexual_partners_past_month ~ "continuous",
        Sexual_partners_lifetime ~ "continuous"
      ),
    statistic = list(
      all_continuous() ~ "{mean} ({min}-{max})",
      all_categorical() ~ "{n} ({p}%)"
    )
  )  |> 
  add_p()


```

And filanlly we create one Table 1 for each site 

```{r}


table1_data |> 
  filter(site == "CAP") |> 
  select(-c(pid, site)) |>
  rename_with(~ str_to_title(.x)) |>  
  tbl_summary(
    by = Arm,
    type =
      list(
        Sexual_partners_past_month ~ "continuous",
        Sexual_partners_lifetime ~ "continuous"
      ),
    statistic = list(
      all_continuous() ~ "{mean} ({min}-{max})",
      all_categorical() ~ "{n} ({p}%)"
    )
  ) |> 
  add_p()

table1_data |> 
  filter(site == "MGH") |> 
  select(-c(pid, site)) |>
  rename_with(~ str_to_title(.x)) |>  
  tbl_summary(
    by = Arm,
    type =
      list(
        Sexual_partners_past_month ~ "continuous",
        Sexual_partners_lifetime ~ "continuous"
      ),
    statistic = list(
      all_continuous() ~ "{mean} ({min}-{max})",
      all_categorical() ~ "{n} ({p}%)"
    )
  ) |> 
  add_p()


```


### Graphics 

```{r}


ggplot(participants_bis, aes(x = Age, fill = Site, col = Site)) +
  geom_histogram(alpha = 0.5, position = "identity") +
  geom_density(lwd = 1.2,
               linetype = 2,
               colour = 2) +
    theme_classic() 
  
participants_bis$Gender_sexual_partners
  
    
ggplot(participants_bis, aes(x = Gender_sexual_partners, fill = Site)) +
    geom_bar(position = "dodge") +
    theme_classic() +
    scale_fill_manual(values = custom_colors) +
    theme(plot.title = element_text(hjust = 0.5),
          axis.text.x = element_text(angle = 90, hjust = 1)) +
    scale_x_discrete(labels = wrap_format(10)) +
    labs(x = str_wrap(var_label, width = 17), y="") 

```


```{r}

cat_vars <- 
  participants_bis |>
  select(where(is.factor) | where(is.character), -Pid) |>
  names()

num_vars <- 
  participants_bis |>
  select(where(is.numeric) | where(is.integer)) |>
  names()

plots <- list()

custom_colors <- c("VCRS" = "green4", "MGH" = "steelblue1")

for (var in cat_vars) {
  var_label <- var_label(participants_bis[[var]])
  var_label <- ifelse(!is.null(var_label), var_label, var)
  
  p <- 
    ggplot(participants_bis, aes_string(x = var, fill = "Site")) +
    geom_bar(position = "dodge") +
    theme_classic() +
    scale_fill_manual(values = custom_colors) +
    theme(plot.title = element_text(hjust = 0.5),
          axis.text.x = element_text(angle = 90, hjust = 1)) +
    scale_x_discrete(labels = wrap_format(10)) +
    labs(x = str_wrap(var_label, width = 17), y="") 
  
  #plots[[var]] <- p
  print(p)
}

for (var in num_vars) {
  var_label <- var_label(participants_bis[[var]])
  var_label <- ifelse(!is.null(var_label), var_label, var)
  
  p <- 
    ggplot(participants_bis, aes_string(x = var, fill = "Site", col = "Site")) +
    geom_histogram(alpha = 0.5, position = "identity") +
    # geom_density(lwd = 1.2,
    #            linetype = 2,
    #            colour = 2) +
    theme_classic() +
    scale_fill_manual(values = custom_colors) +  
    scale_color_manual(values = custom_colors) +  
    theme(plot.title = element_text(hjust = 0.5)) +
    labs(y = str_wrap(var_label, width = 17))  
  
  #plots[[var]] <- p
  print(p)
}


# ggarrange(plotlist = plots, ncol = 2, nrow = ceiling(length(plots)/2))

```


```{r}

p1 <- participants_bis |> 
  ggplot(aes(x=Race))+ 
  geom_bar() + 
  theme_bw() +
  theme(axis.text.x = element_text(angle = 90, hjust = 1))+
  labs(y="") +
  facet_grid(Site~Arm) 

p2 <- participants_bis |> 
  ggplot(aes(x=Food_insecurity))+ 
  geom_bar() + 
  theme_bw() +
  theme(axis.text.x = element_text(angle = 90, hjust = 1))+
  labs(y="", x = var_label(participants_bis$Food_insecurity)) +
  scale_y_continuous(breaks = scales::pretty_breaks(n = 5))+
  facet_grid(Site~Arm)

p3 <- participants_bis |> 
  ggplot(aes(x=Contraception))+ 
  geom_bar() + 
  theme(axis.text.x = element_text(angle = 90, hjust = 1))+
  labs(y="") +
  facet_grid(Site~Arm)

p4 <- participants_bis |> 
  ggplot(aes(x=Gender_sexual_partners))+ 
  geom_bar() + 
  theme_bw() +
  theme(axis.text.x = element_text(angle = 90, hjust = 1))+
  labs(y="", x = var_label(participants_bis$Gender_sexual_partners)) +
  facet_grid(Site~Arm)

p5 <- participants_bis |> 
  ggplot(aes(x=Sexual_partners_past_month))+ 
  geom_bar() + 
  theme_bw() +
  theme(axis.text.x = element_text(angle = 90, hjust = 1))+
  labs(y="", x = var_label(participants_bis$Sexual_partners_past_month)) +
  scale_y_continuous(breaks = scales::pretty_breaks(n = 5))+
  facet_grid(Site~Arm)

p6 <- participants_bis |> 
  ggplot(aes(x=Sexual_partners_lifetime))+ 
  geom_bar() + 
  theme_bw() +
  theme(axis.text.x = element_text(angle = 90, hjust = 1))+
  labs(y="", x = var_label(participants_bis$Sexual_partners_lifetime)) +
  scale_y_continuous(breaks = scales::pretty_breaks(n = 5))+
  facet_grid(Site~Arm)

p7 <- participants_bis |> 
  ggplot(aes(x=Dropout))+ 
  geom_bar() + 
  theme_bw() +
  theme(axis.text.x = element_text(angle = 90, hjust = 1))+
  labs(y="") +
  scale_y_continuous(breaks = scales::pretty_breaks(n = 5))+
  facet_grid(Site~Arm) + 
  theme(
  axis.text.x = element_text(angle = 90, hjust = 1),
  plot.margin = margin(t = 5, r = 5, b = 30, l = 5)  # bas = 30 points
)

#ggarrange(p1, p2, p4, p5, p6, p7, p3, ncol=4, nrow=2) 
p1
p2
p3
p4
p5
p6
p7

```




