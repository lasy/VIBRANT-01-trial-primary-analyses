---
title: "Secondary outcomes"
author: Laura Symul, Laura Vermeren, Susan Holmes
format: 
   html:
     page-layout: full
     code-fold: true
     toc: true
     toc-location: left
     toc-depth: 5
     embed-resources: true
execute:
  cache: true
  warning: false
knitr:
  opts_chunk:
    out.width: "100%"
editor: source
---

### Kinetics of colonization


#### Proportions of participants who colonized


```{r}

prop_colonization_per_arm <- 
  mae[["primary_outcomes"]] |> 
  as_tibble() |> 
  filter(.feature == "colonized_at") |> 
  mutate(colonized_at = outcome) |> 
  dplyr::left_join(
    mae@colData |> as_tibble() |> 
      select(uid, pid, visit_code, location, randomized, arm) |> 
      mutate(.sample = uid),
    by = join_by(.sample)
  ) |> 
  filter(!is.na(colonized_at)) |> 
  group_by(arm, visit_code, site) |> 
  summarize(
    n_pid = pid |> n_distinct(),
    n = n(),
    n_colonized_at = sum(colonized_at),
    .groups = "drop"
  ) |> 
  rowwise() |> 
  mutate(
    prop_who_colonized_at = n_colonized_at / n,
    CI_low = prop.test(n_colonized_at, n)$conf.int[1],
    CI_high = prop.test(n_colonized_at, n)$conf.int[2]
  ) |> 
  ungroup()
 

```

```{r}


g_prop_colonized_by <- 
  prop_colonization_per_arm |>
  filter(!is.na(site), as.numeric(visit_code) >= 1000) |> 
  ggplot(aes(x = visit_code |> factor() |> as.numeric(), y = prop_who_colonized_at, col = arm)) +
  geom_ribbon(aes(ymin = CI_low, ymax = CI_high, fill = arm), alpha = 0.2, col = NA) +
  geom_path() +
  geom_point() +
  facet_grid(site ~ .) + 
  # scale_x_continuous("Study weeks", breaks = c(0:5,7,9,12), minor_breaks = 0:12) +
  scale_y_continuous(
    "Proportion of participants\nwith detected LBP strains", labels = scales::percent,
    breaks = seq(0, 1, by = 0.2)
  ) +
  expand_limits(y = 0) +
  scale_color_manual(values = get_arm_colors()) +
  scale_fill_manual(values = get_arm_colors()) +
  ggtitle(make_title(mae)) 

g_prop_colonized_by


```

#### Total proportions of LBP isolates

```{r}

tot_prop_LBP_strains <- 
  mae[["mg"]] |> 
  as_tibble() |> 
  filter(!is.na(LBP)) |> 
  select(.feature, .sample, rel_abs_bact) |> 
  dplyr::left_join(
    mae@colData |> as_tibble() |> 
      select(uid, pid, visit_code, location, randomized, group4) |> 
      mutate(.sample = uid),
    by = join_by(.sample)
  ) |> 
  filter(randomized, as.numeric(visit_code) >= 1000) |> 
  group_by(pid, visit_code, location, group4) |> 
  summarize(total_prop_at = sum(rel_abs_bact), .groups = "drop") |> 
  mutate(site = ifelse(location == "US", "MGH", "CAP") |> fct_infreq())  |> 
  mutate(
    arm = 
      case_when(
        (group4 == "Yes") ~ "LC-106-o",
        (location == "US") ~ sample(c("Pl", "LC-106-7", "LC-115"), n(), replace = TRUE),
        (location == "SA") ~ sample(c("Pl", "LC-106-7", "LC-106-3", "LC-115"), n(), replace = TRUE),
        TRUE ~ "Blinded"
      ) |> 
      factor(levels = c("Pl", "LC-106-7", "LC-106-3", "LC-106-o", "LC-115", "Blinded"))
  )


```

```{r}


g_tot_prop_LBP_strains <- 
  tot_prop_LBP_strains |> 
  ggplot(aes(x = visit_code |> factor() |> as.numeric(), y = total_prop_at, col = arm)) +
  geom_line(aes(group = pid), alpha = 0.25) +
  geom_point(size = 0.5, alpha = 0.5) +
  facet_grid(site ~ arm) + 
 # scale_x_continuous("Study weeks", breaks = c(0:5,7,9,12), minor_breaks = 0:12) +
  scale_y_continuous(
    "Total proportion of LBP strains", labels = scales::percent,
    breaks = seq(0, 1, by = 0.2)
  ) +
  expand_limits(y = 0) +
  scale_color_manual(values = get_arm_colors()) +
  guides(col = "none") +
  ggtitle(make_title(mae)) 

g_tot_prop_LBP_strains

```






#### Figure 2

```{r}
#| fig-width: 15
#| fig-height: 6

 g_prop_colonized_by + 
  g_tot_prop_LBP_strains +
  plot_layout(guides = "collect", widths = c(1, 5)) +
  plot_annotation(tag_level = "a") &
  theme(legend.position = "bottom")

```

### Microbiota trajectories

> TODO




### Individual LBP strains by sites

```{r}

LBP_strains <- 
  mae[["mg"]] |> 
  as_tibble() |> 
  filter(!is.na(LBP)) |> 
  select(.feature, .sample, rel_abs_bact, LBP, strain_origin) |>
  mutate(detected = rel_abs_bact > 0.05) |>
  dplyr::left_join(
    mae |> colData() |> as_tibble() |> 
      select(uid, pid, location, visit_code, group4) |> mutate(.sample = uid),
    by = join_by(.sample)
    ) |> 
  mutate(
    site = ifelse(location == "US", "MGH", "CAP") |> fct_infreq(),
  ) 
  

```

```{r}

LBP_strains_summary <- 
  LBP_strains |> 
  group_by(pid, site, .feature, LBP, strain_origin) |> 
  summarize(max_prop = max(rel_abs_bact), .groups = "drop")

```

```{r}
#| fig-width: 10
#| fig-height: 4.5

LBP_strains_summary |> 
  # filter(arm != "Pl") |> 
  filter(!is.na(site)) |> 
  group_by(site, .feature, LBP, strain_origin) |> 
  summarize(prop_detected = mean(max_prop >= 0.05), .groups = "drop") |> 
  mutate(origin = str_c("strain origin: ", strain_origin)) |> 
  ggplot(aes(x = .feature, y = prop_detected, fill = site)) +
  geom_col(position = "dodge", width = 0.7) +
  facet_grid(. ~ LBP + origin, scale = "free", space = "free") +
  xlab("LBP strain") +
  scale_y_continuous(
    str_c(
      "Proportion of active arms participants\n",
      "with detected LBP strain\n",
      "(rel. abundance â‰¥ 5% at any weekly visit)"),
    labels = scales::percent, breaks = seq(0, 1, by = 0.2)
    ) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  scale_fill_manual(values = get_site_colors())

```

:::callout-caution
It is expected that LC-115 strains will be detected less frequently - it should be the proportion of participant that received that product (i.e.)
:::


```{r}
#| fig-width: 10
#| fig-height: 4.5

LBP_strains |> 
  # filter(arm != "Pl") |> 
  filter(!is.na(site), as.numeric(visit_code) >= 1100) |> 
  mutate(origin = str_c("strain origin: ", strain_origin)) |> 
  ggplot(aes(x = .feature, y = rel_abs_bact, col = visit_code)) +
  geom_boxplot(outlier.size = 0.5) +
  facet_grid(group4 ~ LBP + origin, scale = "free", space = "free") + # arm ~ LBP + origin
  xlab("LBP strain") +
  scale_y_continuous(
    "LBP strain relative abundance",
    labels = scales::percent, breaks = seq(0, 1, by = 0.2)
    ) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

```








