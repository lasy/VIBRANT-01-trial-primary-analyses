---
title: "Purgatory"
format: html
editor: visual
---

# 03 secondary outcomes

### 08/08 Microbiota trajectory

```{r}
g_trajectories <-
  rel_abs_agg |>
  filter(mITT, randomized != 0, PIPV, !poor_quality_mg_data) |>
  group_by(pid) |> 
  mutate(
    tot_LC115 = sum(rel_ab[LBP == "LC-115"]),
    tot_LBP = sum(rel_ab[!is.na(LBP)])
    ) |> 
  ungroup() |> 
  arrange(desc(PP), -tot_LC115, -tot_LBP) |> 
  mutate(
    pid = pid |> fct_inorder(),
    visit_label = ifelse(visit != "screening", str_c(visit, " (W", study_week, ")"), visit |> as.character()) |> fct_reorder(visit |> as.numeric()),
    ) |> 
  ggplot(aes(y = rel_ab, x = pid, fill = taxon, alpha = ifelse(PP, "PP", "mITT"))) +
  geom_col() +
  facet_grid(visit_label ~ arm + site, scales = "free", space = "free") +
  scale_fill_manual(
    values = get_taxa_colors(rel_abs_agg$taxon |> levels()),
    labels = get_taxa_labels(rel_abs_agg$taxon |> levels()),
    guide = guide_legend(ncol = 1)
    ) +
  scale_alpha_discrete("Population", range = c(0.5, 1)) +
  scale_y_continuous(
    "relative abundance", labels = scales::percent,
    breaks = seq(0, 0.5, by = 0.5), minor_breaks = seq(0, 1, by = 0.25)
  ) +
  scale_x_discrete("Participants") +
  theme(
    strip.text.y = element_text(angle = 0, hjust = 0),
    strip.text.x = element_text(angle = 90, hjust = 0),
    axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)
  )
```


# 04 - supplementary analyses


### 08/08 Time since last dose in 7-days active arms (LC-106-7, LC-115)

Without filtering for last doses taken on the same day as the the v2

```{r}
#| eval: true

study_product <-
  mae@colData |>
  as_tibble() |>
  select(pid, site, randomized, arm, ITT, mITT, PP) |>
  distinct() |>
  filter(randomized, mITT) |>
  left_join(
    exposures |> select(pid, visit_code, study_product),
  by = "pid"
  ) |>
  left_join(
    metadata(mae)$crf_data_clean$crf32 |>as_tibble(),
    by = (c("pid", "visit_code"))) |>
  dplyr::rename(
    study_day_product = study_day,
    visit_code_product = visit_code
  ) |> 
  select(-vaginal_swab_collection_time)


# study_day visit 2 in person
# ! pid 068100026 appear 2 times ! -> remove using filter(!is.na(study_day_visit2))
visit2_studyday <- 
  metadata(mae)$visits_crfs_merged |> 
  as_tibble() |> 
  select(pid, visit_code, study_day) |> 
  distinct() |> 
  filter(visit_code == "1200") |> 
  dplyr::rename(
    study_day_v2 = study_day
  ) |> 
  dplyr::filter(!is.na(study_day_v2))
  
study_prod_time <- 
  study_product |> 
  filter(arm != "Pl") |> 
  left_join(visit2_studyday |> select(-visit_code), by = "pid") |> 
  group_by(pid) |> 
  filter(study_product =="1") |> 
  filter(study_day_product <= study_day_v2) |>  # only consider doses taken before v2
  arrange(study_day_product) |> 
  slice_tail(n = 1) |>              
  ungroup() 

# create category 
study_prod_time <- 
  study_prod_time |> 
  mutate(last_dose = case_when(
    study_day_product == study_day_v2 ~ "same day", 
    study_day_product == study_day_v2-1 ~ "day before", 
    study_day_product < study_day_v2-1~ "more than one day"
  ), 
  last_dose = factor(last_dose, levels = c("same day", "day before", "more than one day")))

```

Table

```{r}

study_prod_time |> 
  dplyr::count(last_dose) |> 
  gt()

```

```{r}

study_prod_time |> 
  group_by(site, arm, last_dose) |> 
  summarize(
    n = n(),  
    .groups = "drop"
  ) |> 
  ungroup() |> 
  pivot_wider(
    id_cols = c(site, last_dose), 
    names_from = arm,
    values_from = n, values_fill = 0
  ) |> 
  group_by(site) |> 
  gt()
```

### 08/08 Time since last dose in 7-days active arms (LC-106-7, LC-115)

We compute this time based on self-reported time of last study product use (daily - CRF plate 32/33) 
-> date/time of last study product = use the crf 32/33 `visit_day` + answer to when? (early morning, etc.)
-> swab time = use `study_day` of the weekly visit.


To compute the time between the last dose taken prior to the in-person visit at week 2, we use information from three sources: crf32 for the time of insertion of the study product, the exposure table for the date of the last dose, and the visits_crfs_merged table for the study day of the week 2 in-person visit.

To better estimate this time interval, we combine the `study_day` (which reflects the calendar day of product use) with `insertion_study_product_time` to account for the time of day the product was inserted. Specifically, we convert the reported insertion window into a fractional day value and add it to the study day, as follows:

*   Before 6am: 0.125
*   Early morning (6–9am): 0.25
*   Late morning (9–12pm): 0.4375
*   Early afternoon (12–3pm): 0.5625
*   Late afternoon (3–6pm): 0.6875
*   Evening (6–9pm): 0.8125
*   Late evening (9pm–midnight): 0.9375

For the week 2 in-person visit, we also assume it occurred during the day (rather than at midnight), so we add 0.5 to the visit's study_day to reflect a likely early afternoon visit time.

```{r}
#| eval: true

study_product <-
  mae@colData |>
  as_tibble() |>
  select(pid, site, randomized, arm, ITT, mITT, PP) |>
  distinct() |>
  filter(randomized, mITT) |>
  left_join(
    exposures |> select(pid, visit_code, study_product),
  by = "pid"
  ) |>
  left_join(
    metadata(mae)$crf_data_clean$crf32 |>as_tibble(),
    by = (c("pid", "visit_code"))) |>
  dplyr::rename(
    study_day_product = study_day,
    visit_code_product = visit_code
  ) |>
  mutate(
    study_day_product_frac =
      dplyr::case_when(
        insert_study_product_time == "Before 6am" ~ study_day_product + 0.125,
        insert_study_product_time == "Early morning (6am-9am)" ~ study_day_product + 0.3125,
        insert_study_product_time == "Late morning (9am-12pm)" ~ study_day_product + 0.4375,
        insert_study_product_time == "Early afternoon (12pm-3pm)" ~ study_day_product + 0.5625,
        insert_study_product_time == "Late afternoon (3pm-6pm)" ~ study_day_product + 0.6875,
        insert_study_product_time == "Evening (6pm-9pm)" ~ study_day_product + 0.8125,
        insert_study_product_time == "Late evening (9pm-midnight)" ~ study_day_product + 0.9375,
        TRUE ~ study_day_product
           )
    )


# study_day visit 2 in person
# ! pid 068100026 appear 2 times ! -> remove using filter(!is.na(study_day_visit2))
visit2_studyday <- 
  metadata(mae)$visits_crfs_merged |> 
  as_tibble() |> 
  select(pid, visit_code, study_day) |> 
  distinct() |> 
  filter(visit_code == "1200") |> 
  dplyr::rename(
    study_day_v2 = study_day
  ) |> 
  dplyr::filter(!is.na(study_day_v2)) |> 
  mutate(
    study_day_v2 = study_day_v2 + 0.5 # this assumes that the visit happened at noon (We don't think we have data/information about the time of visit)
  )

study_prod_time <- 
  study_product |> 
  left_join(visit2_studyday |> select(-visit_code), by = "pid") |> 
  group_by(pid) |> 
  filter(study_product =="1") |> 
  filter(study_day_product_frac <= study_day_v2) |>  # we only consider doses that were taken before the visit 2
  arrange(study_day_product_frac) |> 
  slice_tail(n = 1) |>              
  ungroup() 


# filter for participant in LC-106-7 and LC-115 and compute the difference in time
study_prod_time <- 
  study_prod_time |> 
  filter(arm %in% c("LC-106-7", "LC-115")) |> 
  mutate(
    time_between_final_dose_and_v2 = study_day_v2 - study_day_product_frac
  )

```



```{r}
#| eval: true

# mean and CI of time_between_final_dose_and_visit2 by arm
study_prod_time |> 
  group_by(arm) |> 
  summarise(
    mean_time = mean(time_between_final_dose_and_v2, na.rm = TRUE),
    mean_hours = mean_time * 24, # convert to hours
    median_time = median(time_between_final_dose_and_v2, na.rm = TRUE),
    median_hours = median_time * 24, # convert to hours
    sd_time = sd(time_between_final_dose_and_v2, na.rm = TRUE),
    sd_hours = sd_time * 24, # convert to hours
    n = n(),
    CI = list(DescTools::MeanCI(time_between_final_dose_and_v2, conf.level = 0.95, na.rm = TRUE))
  ) |> 
  mutate(
    CI_text = str_c("(", round(map_dbl(CI, ~ .x[2]), 2), "-", round(map_dbl(CI, ~ .x[3]), 2), ")"),
    CI_hours = str_c("(", round(map_dbl(CI, ~ .x[2] * 24), 2), "-", round(map_dbl(CI, ~ .x[3] * 24), 2), ")")
  ) |>
  select(arm,n, median_hours, mean_hours, sd_hours, CI_hours) |> 
  gt() |> 
  gt::cols_label(
    arm = "Arm",
    n = "N mITT participants",
    median_hours = "Median time between final dose and visit 2 (hours)",
    mean_hours = "Mean time between final dose and visit 2 (hours)",
    sd_hours = "Standard deviation (hours)",
    CI_hours = "95% CI (hours)"
  )

```

```{r}
#| fig-height: 6
#| fig-width: 8

study_prod_time |> 
  ggplot() + 
  aes(x = time_between_final_dose_and_v2 * 24, y = pid) +
  geom_point() + 
  geom_vline(xintercept = c(24, 48, 72, 96), linetype = "dashed", color = "steelblue") +
  scale_x_continuous(
    breaks = seq(0, 24 * 4, by = 12),  
    name = "Time between final dose and visit 2 (hours)"
  ) +
  facet_grid(site + arm ~ ., scales = "free_y", space = "free_y")

```