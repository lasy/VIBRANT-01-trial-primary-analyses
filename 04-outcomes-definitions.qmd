---
title: "Outcomes definitions"
author: Laura Symul
format: 
   html:
     page-layout: full
     code-fold: true
     toc: true
     toc-location: left
     toc-depth: 5
     embed-resources: true
execute:
  cache: true
  warning: false
knitr:
  opts_chunk:
    out.width: "100%"
editor: source
---



### Primary outcome definition

The primary outcome is XXX INSERT DEFINITION XXX

Consequently, we need to compute the relative abundance of each LBP strains from their proportions out of total *L. crispatus* proportions and the total *L. crispatus* proportions as estimated by 16S sequencing. 


#### LBP strains relative abundances in each samples

This is stored in a new assay: `LBP_rel_ab`

```{r}

se_LBP_rel_abundances <- 
  list(
    LBP_rel_ab = 
      mae[["mg_ksanity"]] |> 
      filter(!is.na(LBP)) |> 
      left_join(
        mae[["mg_virgo2"]] |> 
          filter(str_detect(.feature, "crispatus")) |> 
          as_tibble() |> 
          dplyr::select(.sample, virgo2_prop) |> 
          group_by(.sample) |> summarize(Lc_prop = sum(virgo2_prop))
      ) |> 
      mutate(
        LBP_rel_ab = prop_of_Lc * Lc_prop
      ) |> 
      dplyr::select(-prop_of_Lc, -unique_kmers) 
  )


mae <- c(mae, se_LBP_rel_abundances)

```


#### *At* each visit

From this, we can compute the total relative abundance of all LBP strains or the maximum relative abundance of any LBP strain in each sample. 

If the total relative abundance of all LBP strains is larger than 0.1 or the maximum relative abundance of any LBP strain is larger than 0.05, we consider that the LBP achieved colonization *at* that visit.



```{r}

colonization <- 
  mae[["LBP_rel_ab"]] |> 
  as_tibble() |>
  left_join(colData(mae) |> as_tibble(),by = join_by(.sample)) |> 
  group_by(.sample, pid, visit_code) |> 
  summarize(
    total_prop_at = sum(LBP_rel_ab), # , na.rm = TRUE
    max_prop_at = max(LBP_rel_ab), # , na.rm = TRUE
    .groups = "drop"
  ) |> 
  mutate(
    colonized_at = (total_prop_at > 0.1) | max_prop_at > 0.05
  ) 

```


#### *By* each visit

From the colonization status at each visit, we can compute the colonization status *by* each visit. A participant is considered to have colonized *by* a visit if they have been colonized at that visit or any previous visit.

```{r}

colonization <- 
  colonization |> 
  group_by(pid) |> 
  arrange(pid, visit_code) |>
  mutate(
    colonized_by = cummax(ifelse(is.na(colonized_at), FALSE, colonized_at)) |> as.logical()
  )  |> 
  
  # mutate(
  #   colonized_by = cumsum(colonized_at) > 0
  # ) |> 
  
  ungroup()

```

#### Adding `primary` assay to `MAE`


```{r}

se_primary <-
  SummarizedExperiment(
    assays = list(
      primary = 
        colonization |> 
        dplyr::select(-pid, -visit_code) |> 
        as.data.frame() |> 
        column_to_rownames(".sample") |> t()
    )
  )

mae <- c(mae, list(LBP_colonization = se_primary))

```

### Secondary outcomes definitions

#### 16S rRNA microbiota composition, aggregated at the species level

> TODO

#### 16S rRNA microbiota composition, augmented with LBP strains relative abundances

We combine the 16S rRNA microbiota composition with the LBP strains relative abundances to create a new assay `mb_composition`.

> TODO

